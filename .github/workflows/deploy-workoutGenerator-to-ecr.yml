name: Deploy to Container Registries

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: eu-west-2
  ECR_REPOSITORY: elite-ai-workout-generator
  CONTAINER_NAME: elite-ai-workout-generator
  GHCR_REPOSITORY: elite-ai-workout-generator

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          GHCR_REGISTRY: ghcr.io/${{ github.repository_owner }}
        run: |
          # Build the image with multiple tags
          docker build \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            -t $GHCR_REGISTRY/$GHCR_REPOSITORY:$IMAGE_TAG \
            -t $GHCR_REGISTRY/$GHCR_REPOSITORY:latest \
            -f src/EliteAI.WorkoutGenerator/Dockerfile .

          # Push to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

          # Push to GHCR
          docker push $GHCR_REGISTRY/$GHCR_REPOSITORY:$IMAGE_TAG
          docker push $GHCR_REGISTRY/$GHCR_REPOSITORY:latest

          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
